#include "complexmath.h"

////////////////////////////////////////////////////////////

BEGIN_GSL_NAMESPACE

////////////////////////////////////////////////////////////

gsl::complex sqrt( const gsl::complex& z )
{	return gsl_complex_sqrt( z.const_ref() );	}

////////////////////////////////////////////////////////////

gsl::complex sqrt( real x )
{	return gsl_complex_sqrt_real( x );	}

////////////////////////////////////////////////////////////

gsl::complex pow( const gsl::complex& z, const gsl::complex& a )
{	return gsl_complex_pow( z.const_ref(), a.const_ref() );		}

////////////////////////////////////////////////////////////

gsl::complex pow(const gsl::complex& z, real a )
{	return gsl_complex_pow_real( z.const_ref(), a );	}

////////////////////////////////////////////////////////////

gsl::complex exp( const gsl::complex& z )
{	return gsl_complex_exp( z.const_ref() );		}

////////////////////////////////////////////////////////////

gsl::complex log( const gsl::complex& z)
{	return gsl_complex_log( z.const_ref() );		}

////////////////////////////////////////////////////////////

gsl::complex ln( const gsl::complex& z)
{	return gsl_complex_log( z.const_ref() );		}

////////////////////////////////////////////////////////////

gsl::complex log10( const gsl::complex& z )
{	return gsl_complex_log10( z.const_ref() );		}

////////////////////////////////////////////////////////////

gsl::complex log_b( const gsl::complex& z, const gsl::complex& b )
{	return gsl_complex_log_b( z.const_ref(), b.const_ref() );		}

////////////////////////////////////////////////////////////

END_GSL_NAMESPACE

////////////////////////////////////////////////////////////